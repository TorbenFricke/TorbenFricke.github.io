{"version":3,"sources":["util.js","gameLogic.js","Timeline.js","Header.js","Footer.js","Teams.js","Overview.js","App.js","index.js"],"names":["uid","Math","random","toString","substr","setFromLocalStorage","key","setter","fromStorage","localStorage","getItem","JSON","parse","actions","initialGameState","teams","newTeam","timeline","newPlayer","name","id","color","players","findTeamByPlayerId","team","findThrowOrder","lastPlayerIdInTeam","teamId","slice","reverse","entry","playerId","findTeamById","length","byTeam","lastThrowerId","lastThrowerIndex","findIndex","player","teamsLastThrow","i","Object","keys","sorted","map","lastIdx","sort","a","b","byTeamList","item","push","order","teamOrder","saveToLocalstorage","setItem","stringify","count","action","throws","Proxy","get","target","icons","Timeline","actionCount","setTimeline","className","useState","activeIdx","setActiveIdx","throwOrder","setThrowOrder","historyLength","setHistoryLength","undoCount","setUndoCount","saveAndReturnTimeline","newTimeline","performAction","timelineEntry","timestamp","Date","now","generateTimelineEntry","state","useEffect","navDown","href","RoundButtonSmall","onClick","row","index","findPlayerById","TimelinePlayer","dead","onUndo","filter","active","onThrow","onSkip","props","undefined","setDead","timeoutRef","setTimeoutRef","click","handler","clearTimeout","timeout","setTimeout","icon","faUndo","moment","locale","fromNow","ThrowButtons","RoundButton","children","Header","ThrowsHeaderStat","faBowlingBall","faPause","navOptions","Footer","navIndex","setNavIndex","FooterNavButton","faUserFriends","faTable","onTouchStart","TeamSetup","setTeams","reset","Team","setTeam","_team","deleteTeam","splice","faUsers","ResetButton","InfoBox","rel","showModal","setShowModal","faRedo","Modal","closeModal","faTrashAlt","ColorSelector","setColor","Player","throwCount","setPlayer","_player","deletePlayer","inputId","GroupButton","document","getElementById","focus","e","faPlus","type","placeholder","value","onChange","event","colors","editing","setEditing","faPen","c","Overview","TeamTable","HeaderColumn","TimelineColumn","Row","console","log","iconList","_initialGameState","App","setThrows","setActionCount","scrollIntoView","window","scrollTo","top","behavior","countThrows","countActions","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b286f8e1.chunk.js","sourcesContent":["\nexport function uid() {\n    // Math.random should be unique because of its seeding algorithm.\n    // Convert it to base 36 (numbers + letters), and grab the first 9 characters\n    // after the decimal.\n    return '_' + Math.random().toString(36).substr(2, 9);\n}\n\n\nexport function setFromLocalStorage(key, setter) {\n    let fromStorage = localStorage.getItem(key)\n    if (fromStorage == null) return\n    setter(JSON.parse(fromStorage))\n}","import {uid} from \"./util\";\n\nexport const actions = {\n    throw: 0,\n    skip: 1,\n}\n\nexport function initialGameState() {\n    return {teams: [newTeam(\"red\"), newTeam(\"blue\")], timeline: []}\n}\n\nexport function newPlayer(name) {\n    return {name: name, id: uid()}\n}\n\nexport function newTeam(color=\"yellow\") {\n    return {color: color, id: uid(), players: [newPlayer()]}\n}\n\nexport function findPlayerById(teams, id) {\n    for (const team of teams) {\n        for (const player of team.players) {\n            if (player.id === id) return player\n        }\n    }\n    return {}\n}\n\nexport function findTeamById(teams, id) {\n    for (const team of teams) {\n        if (team.id === id) return team\n    }\n    return {}\n}\n\nexport function findTeamByPlayerId(teams, id) {\n    for (const team of teams) {\n        for (const player of team.players) {\n            if (player.id === id) return team\n        }\n    }\n    return {}\n}\n\nexport function findThrowOrder(teams, timeline) {\n    function lastPlayerIdInTeam(teamId) {\n        for (let entry of timeline.slice().reverse()) {\n            if (entry.teamId === teamId) return entry.playerId\n        }\n        let players = findTeamById(teams, teamId).players\n        return players[players.length - 1].id\n    }\n\n    let byTeam = {}\n    for (const team of teams) {\n        if (team.players.length === 0) continue\n        const lastThrowerId = lastPlayerIdInTeam(team.id)\n        let lastThrowerIndex = team.players.findIndex(player => player.id === lastThrowerId)\n        lastThrowerIndex = (lastThrowerIndex + 1) % team.players.length\n        byTeam[team.id] = [...team.players.slice(lastThrowerIndex), ...team.players.slice(0, lastThrowerIndex)]\n    }\n\n    // sort teams\n    let teamsLastThrow = {}\n    for (let i = timeline.length - 1; i >= 0; i--) {\n        if (!(timeline[i].teamId in teamsLastThrow)) teamsLastThrow[timeline[i].teamId] = i\n        if (Object.keys(teamsLastThrow).length === teams.length) break\n    }\n\n    for (let team of teams) {\n        if (team.id in teamsLastThrow) continue\n        teamsLastThrow[team.id] = -1\n    }\n\n    const sorted = Object.keys(teamsLastThrow)\n        .map(key => {\n            return {id: key, lastIdx: teamsLastThrow[key]}\n        })\n        .sort((a, b) => {\n            return a.lastIdx < b.lastIdx ? -1 : a.lastIdx === b.lastIdx ? 0 : 1\n        })\n\n    const byTeamList = []\n    for (let item of sorted) {\n        byTeamList.push(byTeam[item.id])\n    }\n\n    let order = []\n    for (let i = 0; i < 20; i++) {\n        for (const teamOrder of byTeamList) {\n            if (!teamOrder) { continue }\n            i < teamOrder.length && order.push(teamOrder[i])\n        }\n    }\n\n    return order\n}\n\nexport function generateTimelineEntry(teams, playerId, action, teamId=null) {\n    return {\n        playerId: playerId,\n        action: action,\n        teamId: teamId ? teamId : findTeamByPlayerId(teams, playerId).id,\n        timestamp: Date.now(),\n    }\n}\n\nexport function saveToLocalstorage({teams, timeline}) {\n    if (teams) {\n        localStorage.setItem(\"teams\", JSON.stringify(teams))\n    }\n    if (timeline) {\n        localStorage.setItem(\"timeline\", JSON.stringify(timeline))\n    }\n}\n\nfunction count(timeline, action) {\n    // default value of 0\n    let throws = new Proxy({}, {\n        get: (target, name) => name in target ? target[name] : 0\n    })\n\n    for (let entry of timeline) {\n        if (entry.action !== action) continue\n        throws[entry.playerId] += 1\n        throws[entry.teamId] += 1\n    }\n\n    return throws\n}\n\nexport function countThrows(timeline) {\n    return count(timeline, actions.throw)\n}\n\nexport function countSkips(timeline) {\n    return count(timeline, actions.skip)\n}\n\nexport function countActions(timeline) {\n    // default value of 0\n    let count = new Proxy({}, {\n        get: (target, name) => name in target ? target[name] : 0\n    })\n\n    for (let entry of timeline) {\n        count[entry.playerId] += 1\n        count[entry.teamId] += 1\n    }\n\n    return count\n}","import React, {useEffect, useState} from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faBowlingBall, faPause, faUndo} from \"@fortawesome/free-solid-svg-icons\";\nimport {\n    actions,\n    findPlayerById,\n    findTeamByPlayerId,\n    findThrowOrder,\n    generateTimelineEntry,\n    saveToLocalstorage,\n} from \"./gameLogic\"\nimport moment from \"moment\";\nimport 'moment/locale/de'\n\n\nexport const icons = {}\nicons[actions.throw] = faBowlingBall\nicons[actions.skip] = faPause\n\nexport function Timeline({timeline, teams, throws, actionCount, setTimeline, className, ...props}) {\n    const [activeIdx, setActiveIdx] = useState(0);\n    const [throwOrder, setThrowOrder] = useState(findThrowOrder(teams, timeline));\n    const [historyLength, setHistoryLength] = useState(10)\n    const [undoCount, setUndoCount] = useState(0)\n\n    useEffect(() => {\n        setThrowOrder(findThrowOrder(teams, timeline))\n    }, [teams, timeline]);\n\n    function saveAndReturnTimeline(newTimeline) {\n        saveToLocalstorage({timeline: newTimeline})\n        return newTimeline\n    }\n\n    function performAction(playerId, action) {\n        const timelineEntry = generateTimelineEntry(teams, playerId, action)\n        setTimeline(state =>\n            saveAndReturnTimeline([...state, timelineEntry])\n        )\n    }\n\n    function undoAction(timestamp) {\n        setUndoCount(undoCount + 1)\n        setTimeline(state =>\n            saveAndReturnTimeline(state.filter(entry => entry.timestamp !== timestamp))\n        )\n    }\n\n    const navDown = (\n            <a href={\"#defaultScroll\"} className={\"underline ml-2 text-gray-500 text-sm\"}>\n                Nach unten...\n            </a>\n        )\n\n    return (\n        <div className={className}>\n            <div className={\"mx-auto pt-2\"}>\n                <div className={\"text-center mb-2\"}>\n                    {historyLength < timeline.length ?\n                        <div className={\"mt-4\"}>\n                            <RoundButtonSmall onClick={() => setHistoryLength(historyLength + 10)}>\n                                Weitere Anzeigen...\n                            </RoundButtonSmall>\n                            <div className={\"text-gray-500 ml-2 mt-1 text-sm\"}>\n                                {timeline.length - historyLength} ausgebledet\n                                {navDown}\n                            </div>\n                        </div>\n                        :\n                        navDown\n                    }\n                </div>\n                <div>\n                    {\n                        timeline.slice(-historyLength).map((row, index) => {\n                            const player = findPlayerById(teams, row.playerId)\n                            //const isActive = index === timeline.length + activeIdx\n                            return <TimelinePlayer\n                                player={player}\n                                //active={isActive}\n                                key={row.timestamp}\n                                dead={true}\n                                timestamp={row.timestamp}\n                                action={row.action}\n                                onClick={() => setActiveIdx(index - timeline.length)}\n                                onUndo={() => undoAction(row.timestamp)}\n                                color={findTeamByPlayerId(teams, player.id).color}\n                            />\n                        })\n                    }\n                </div>\n                {timeline.length > 0 &&\n                    <div className={\"mx-2 my-2 flex\"} id={\"defaultScroll\"}>\n                        <div className={\"border-t border-gray-300 dark:border-gray-500 h-0 flex-grow  mt-3\"}/>\n                        <div className={\"flex-initial text-gray-600 dark:text-gray-400 mx-2\"}>\n                            Als Nächstes:\n                        </div>\n                        <div className={\"border-t border-gray-300 dark:border-gray-500 h-0 flex-grow mt-3\"}/>\n                    </div>\n                }\n                <div>\n                    {\n                        throwOrder.map((player, index) => {\n                            return <TimelinePlayer\n                                throws={throws[player.id]}\n                                player={player}\n                                active={index === activeIdx}\n                                key={player.id + \"_\" + undoCount + \"_\" + actionCount[player.id] + \"_\" + throws[player.id]}\n                                onClick={() => setActiveIdx(index)}\n                                onThrow={() => performAction(player.id, actions.throw)}\n                                onSkip={() => performAction(player.id, actions.skip)}\n                                color={findTeamByPlayerId(teams, player.id).color}\n                            />\n                        })\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n\nfunction TimelinePlayer({setTimeline, player, throws, timestamp, color, action, ...props}) {\n    const [dead, setDead] = useState(action !== undefined)\n    const [timeoutRef, setTimeoutRef] = useState()\n\n    function click(handler=props.onThrow) {\n        setDead(!dead)\n        if (timeoutRef !== undefined) {\n            clearTimeout(timeoutRef)\n            setTimeoutRef()\n        } else {\n            let timeout = setTimeout(() => {\n                dead ? props.onUndo() : handler()\n            }, 1000)\n            setTimeoutRef(timeout)\n        }\n    }\n\n    return (\n        <div\n            className={`first:border-t border-b duration-1000\n            h-14 text-${color}-600 dark:text-${color}-400 \n            bg-white dark:bg-gray-800 border-gray-200 dark:border-black`}\n            onClick={props.onClick}\n        >\n\n            <div className={`absolute h-14\n            bg-${color}-100 border-gray-300 dark:bg-${color}-900 dark:bg-opacity-70\n            dark:bg-gray-800 border-gray-200 dark:border-black\n            first:border-t border-b \n            ${dead ? \"w-0\" : \"w-full\"} transition-width duration-1000`}/>\n\n            <div className={\"relative flex ml-3 mr-2 z-0\"}>\n                <div\n                    className={\n                        `w-9 h-9 rounded-full mt-2.5 mr-3 text-center border-2 \n                        ${dead ? \"text-opacity-50 border-opacity-50\" : \"\"} transition duration-1000 \n                        border-${color}-400\n                        bg-gray-700 dark:bg-black bg-opacity-5 dark:bg-opacity-30 \n                        text-${color}-500 dark:text-${color}-300 dark:border-${color}-300`\n                    }\n                    onClick={() => click(props.onThrow)}\n                >\n                    {dead &&\n                        <FontAwesomeIcon icon={faUndo} className={\"mt-2\"}/>\n                    }\n                </div>\n                <div className={`flex-initial truncate my-4 font-bold`}>\n                    {action === actions.skip && <FontAwesomeIcon icon={icons[action]} className={\"mr-2 mt-1\"}/>}\n                    {player.name || \"...\"}\n                    {timestamp !== undefined &&\n                    <span className={`font-normal ml-2 text-sm text-opacity-70`}>\n                        {moment(timestamp).locale(\"de\").fromNow()}\n                    </span>\n                    }\n                </div>\n                {throws !== undefined &&\n                    <div className={`ml-2 mt-3 font-bold flex-initial h-8 w-8 pt-1 text-center rounded-full \n                    bg-${color}-50 dark:bg-${color}-900 ${dead ? \" opacity-0\" : \"\"} transition-opacity`}>\n                        {throws}\n                    </div>\n                }\n                <div className={\"flex-grow\"}/>\n                <div className={\"flex-0\"}>\n                    {props.active && action === undefined && <ThrowButtons\n                        onThrow={() => click(props.onThrow)}\n                        onSkip={() => click(props.onSkip)}\n                        color={color}\n                        className={dead ? \"transition-opacity opacity-0\" : \"\"}\n                    />}\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nfunction ThrowButtons({className, ...props}) {\n    return (\n        <div className={\"flex mt-2\"}>\n            <RoundButton className={\"flex-grow ml-1 \" + className}  onClick={props.onSkip} color={props.color}>\n                <FontAwesomeIcon icon={icons[actions.skip]} className={\"mr-2\"}/>\n                Aussetzen\n            </RoundButton>\n        </div>\n    )\n}\n\nfunction UndoButtons(props) {\n    return (\n        <RoundButton className={\"mt-2 w-full\"} onClick={props.onUndo}>\n            <FontAwesomeIcon icon={faUndo} className={\"mr-2\"}/>\n            Rückgängig\n        </RoundButton>\n    )\n}\n\nfunction RoundButton({color=\"gray\", ...props}) {\n    return (\n        <button\n            className={`bg-white dark:bg-black dark:bg-opacity-30 border border-${color}-500 dark:border-${color}-300 \n            text-${color}-500 dark:text-${color}-300 h-10 py-auto px-3 rounded-full shadow-sm ` + props.className}\n            onClick={props.onClick}\n        >\n            {props.children}\n        </button>\n    )\n}\n\nfunction RoundButtonSmall(props) {\n    return (\n        <button\n            className={`bg-white dark:bg-gray-800 dark:text-gray-400 border border-gray-400 text-gray-600 \n            py-1 text-sm px-3 rounded-full shadow-sm ` + props.className}\n            onClick={props.onClick}\n        >\n            {props.children}\n        </button>\n    )\n}","import React from \"react\";\n\nexport function Header({teams, throws}) {\n    return (\n        <div>\n            <div className={\"fixed bg-white dark:bg-black border-b dark:border-gray-600 top-0 h-12 w-full px-7 pb-2 flex shadow-md z-20\"}>\n                <div className={\"font-bold text-gray-600 dark:text-gray-200 my-auto\"}>\n                    Würfe:\n                </div>\n                <div className={\"flex-grow\"}/>\n                {\n                    teams.map(team => {\n                        return <ThrowsHeaderStat color={team.color} key={team.id}>\n                            {throws[team.id]}\n                        </ThrowsHeaderStat>\n                    })\n                }\n            </div>\n            <div className={\"sticky h-12 z-0\"}/>\n        </div>\n    )\n}\n\nexport function ThrowsHeaderStat(props) {\n    return (\n        <div\n            className={`\n            text-${props.color}-500 bg-${props.color}-50 dark:bg-${props.color}-800 dark:text-${props.color}-100\n            my-auto h-9 w-9 text-center pt-1.5 rounded-full\n            ml-3 font-bold ` + props.className}>\n            {props.children}\n        </div>\n    )\n}","import {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport {faBowlingBall, faTable, faUserFriends} from \"@fortawesome/free-solid-svg-icons\";\n//faTable\n\n\nexport const navOptions = {\n    teams: 1,\n    timeline: 0,\n    overview: 2,\n}\n\nexport function Footer({navIndex, setNavIndex, ...props}) {\n    return (\n        <div className={\"h-20 mb-1\"}>\n            <div\n                className={\"fixed bg-white dark:bg-black bottom-0 w-full border-t border-gray-200 dark:border-gray-600 flex px-2 space-x-0 justify-center drop-shadow\"}>\n                <FooterNavButton\n                    icon={faBowlingBall}\n                    active={navIndex === navOptions.timeline}\n                    onClick={() => setNavIndex(navOptions.timeline)}>\n                    Spielen\n                </FooterNavButton>\n                <FooterNavButton\n                    icon={faUserFriends}\n                    active={navIndex === navOptions.teams}\n                    onClick={() => setNavIndex(navOptions.teams)}>\n                    Teams\n                </FooterNavButton>\n                <FooterNavButton\n                    icon={faTable}\n                    active={navIndex === navOptions.overview}\n                    onClick={() => setNavIndex(navOptions.overview)}>\n                    Überblick\n                </FooterNavButton>\n            </div>\n        </div>\n    )\n}\n\nfunction FooterNavButton({active, color, ...props}) {\n    const activeClass = `text-blue-600 dark:text-white`\n    const inactiveClass = `dark:text-gray-500 text-gray-500`\n    return (\n        <button\n            className={`text-center h-20 mb-1 pb-7 px-4 pt-2 rounded-xl flex-1 ${active ? activeClass : inactiveClass} ` + props.className}\n            onTouchStart={props.onClick}\n            onClick={props.onClick}\n        >\n            <div>\n                <FontAwesomeIcon icon={props.icon}/>\n            </div>\n            <div>\n                {props.children}\n            </div>\n        </button>\n    )\n}","import React, {useState} from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faTrashAlt, faPen, faPlus, faBowlingBall, faRedo, faUsers} from \"@fortawesome/free-solid-svg-icons\";\nimport {newPlayer, newTeam, saveToLocalstorage} from \"./gameLogic\";\n\nexport function TeamSetup({teams, setTeams, reset, actionCount, ...props}) {\n    return (\n        <div className={\"px-2 py-2 space-y-4\"}>\n            {teams.map((team, i) => {\n                return <Team\n                    team={team}\n                    actionCount={actionCount}\n                    setTeam={_team => {\n                        teams[i] = _team\n                        setTeams([...teams])\n                        saveToLocalstorage({teams: teams})\n                    }}\n                    deleteTeam={() => {\n                        teams.splice(i, 1)\n                        setTeams([...teams])\n                        saveToLocalstorage({teams: teams})\n                    }}\n                    key={team.id}\n                />\n            })}\n            <button\n                className={\"w-full rounded-xl shadow-md py-3 text-center border bg-white text-blue-600 \" +\n                \"dark:bg-gray-800 dark:border-gray-600 dark:text-blue-400\"}\n                onClick={() => setTeams([...teams, newTeam()])}\n            >\n                <FontAwesomeIcon className={\"mr-2\"} icon={faUsers}/>\n                Neues Team\n            </button>\n            <ResetButton reset={reset}/>\n            <InfoBox/>\n        </div>\n    )\n}\n\nfunction InfoBox() {\n    return (\n        <p className={\"text-center dark:text-gray-400\"}>\n            Alle Daten werden <a\n                className={\"underline text-blue-700 dark:text-blue-500\"}\n                href={\"https://de.wikipedia.org/wiki/Web_Storage#localStorage\"}\n                rel={\"noreferrer\"}\n                target={\"_blank\"}\n            >\n                lokal auf deinem Gerät gespeichert\n            </a>.\n            Wenn du deinen Browserverlauf löscht, sind auch alle Boßeldaten weg. Öffne die Boßel App nur ein mal, damit\n            es nicht zu Versionskonflikten kommt.\n        </p>\n    )\n}\n\nfunction ResetButton({reset, ...props}) {\n    const [showModal, setShowModal] = useState(false)\n\n    return (\n        <div>\n            <button\n                className={\"w-full rounded-xl bg-white dark:b shadow-md py-3 text-red-600 text-center \" +\n                \"dark:bg-gray-800 dark:border-gray-600 dark:text-red-400 border\"}\n                onClick={() => setShowModal(true)}\n            >\n                <FontAwesomeIcon className={\"mr-2\"} icon={faRedo}/>\n                Alles Zurücksetzen\n            </button>\n            {showModal &&\n            <Modal closeModal={() => setShowModal(false)}>\n                <div className={\"text-center font-bold\"}>\n                    Es werden alle Würfe und Spieler gelöscht. Sicher?\n                </div>\n                <button\n                    className={\"w-full mt-4 rounded-xl bg-white shadow-md py-3 text-blue-600 text-center bg-gray-100\"}\n                    onClick={() => setShowModal(false)}\n                >\n                    <FontAwesomeIcon className={\"mr-2\"} icon={faBowlingBall}/>\n                    Weiterspielen\n                </button>\n                <button\n                    className={\"w-full mt-4 rounded-xl bg-white shadow-md py-3 text-red-600 text-center bg-red-100\"}\n                    onClick={() =>{\n                        setShowModal(false)\n                        reset()\n                    }}\n                >\n                    <FontAwesomeIcon className={\"mr-2\"} icon={faTrashAlt}/>\n                    Alles Löschen\n                </button>\n            </Modal>\n            }\n        </div>\n    )\n}\n\nfunction Team({team, setTeam, deleteTeam, actionCount, ...props}) {\n    return (\n        <div>\n            <div className={`w-100 rounded-xl bg-${team.color}-100 dark:bg-${team.color}-900 dark:bg-opacity-70 shadow-md p-3`}>\n                <ColorSelector\n                    className={\"float-right mb-2\"}\n                    color={team.color}\n                    setColor={color => {\n                        setTeam({...team, color: color})\n                    }}\n                />\n                <div className={\"space-y-3 mb-2\"}>\n                    {team.players.map((player, i) => {\n                        return <Player\n                            player={player}\n                            throwCount={actionCount[player.id]}\n                            color={team.color}\n                            setPlayer={(_player) => {\n                                team.players[i] = _player\n                                setTeam({...team})\n                            }}\n                            deletePlayer={() => {\n                                if (actionCount[player.id] > 0) return\n                                team.players.splice(i, 1)\n                                if (team.players.length === 0) {\n                                    deleteTeam()\n                                    return\n                                }\n                                setTeam({...team})\n                            }}\n                            key={player.id}\n                            inputId={player.id}\n                        />\n                    })}\n                </div>\n                <div>\n                    <GroupButton\n                        color={\"blue\"}\n                        onClick={() => {\n                            const _player = newPlayer(\"\")\n                            team.players.push(_player)\n                            setTeam({...team})\n                            setTimeout(()=> {\n                                try {\n                                    document.getElementById(_player.id).focus()\n                                } catch (e) {}\n\n                            },0)\n                        }}\n                    >\n                        <FontAwesomeIcon className={\"mr-2\"} icon={faPlus}/>\n                        Neuer Spieler\n                    </GroupButton>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nfunction GroupButton({onClick, className=\"\", color=\"blue\", ...props}) {\n    return (\n        <button\n            className={`\n            first:rounded-t-xl last:rounded-b-xl border-b last:border-b-0 w-full px-3 py-2 transition shadow-sm \n            bg-white dark:bg-gray-900 border-gray-100 dark:border-gray-100 text-${color}-600 dark:text-gray-300\n            dark:bg-opacity-30 dark:border-opacity-40\n            ` + className}\n            onClick={onClick}\n        >\n            {props.children}\n        </button>\n    )\n}\n\nfunction Player({player, setPlayer, deletePlayer, color, throwCount, ...props}) {\n    return (\n        <div className={\"flex\"}>\n            <button onClick={() => deletePlayer()}>\n                <FontAwesomeIcon\n                    className={throwCount > 0 ?\n                        `text-gray-400 dark:text-${color}-900` :\n                        `text-${color}-600 dark:text-white`}\n                    icon={faTrashAlt}\n                />\n            </button>\n            <input\n                className={`appearance-none border w-full py-1 px-0 ml-3 leading-tight\n                focus:outline-none focus:shadow-outline \n                focus:border-${color}-800 dark:focus:border-${color}-200\n                rounded-none border-b-2 border-l-0 border-r-0 border-t-0 bg-transparent\n                mr-2 border-${color}-200 text-${color}-600 dark:border-${color}-500 dark:text-white\n                `}\n                id={props.inputId}\n                type=\"text\"\n                placeholder=\"Name\"\n                value={player.name}\n                onChange={event => setPlayer({...player, name: event.target.value})}\n            />\n        </div>\n    )\n}\n\nconst colors = [\"red\", \"blue\", \"green\", \"purple\", \"yellow\", \"pink\"]\n\nfunction ColorSelector({color, setColor, ...props}) {\n    const [editing, setEditing] = useState(false)\n\n    return (\n        <button className={props.className}>\n            <div\n                className={`rounded-full w-10 h-10 bg-${color}-500 dark:bg-${color}-600 text-center py-2`}\n                onClick={() => setEditing(!editing)}>\n                <FontAwesomeIcon className={\"text-white\"} icon={faPen}/>\n            </div>\n            {editing &&\n                <Modal closeModal={() => setEditing(false)}>\n                    <h2 className={\"font-bold mb-6 text-center\"}>Farbe Auswählen</h2>\n                    <div className={\"grid grid-cols-3 gap-4 place-items-center\"}>\n                        {colors.map(c => {\n                            return <div\n                                className={`rounded-full shadow-md w-14 h-14 bg-${c}-500 text-center py-2`}\n                                key={c}\n                                onClick={() => {\n                                    setEditing(false)\n                                    setColor(c)\n                                }}\n                            />\n                        })}\n                    </div>\n                </Modal>\n            }\n        </button>\n    )\n}\n\nfunction Modal({closeModal, children}) {\n    return (\n        <div\n            id={\"modal\"}\n            className=\"fixed inset-0 bg-gray-600 bg-opacity-20 backdrop-filter backdrop-blur overflow-y-auto\n            h-screen w-full z-30 flex\"\n            onClick={(e) => {\n                if (e.target.id === 'modal') {\n                    closeModal()\n                }\n            }}\n        >\n            <div className={\"rounded-2xl bg-white dark:bg-gray-900 dark:text-gray-200 shadow-lg my-auto mx-5 w-full p-4\"}>\n                {children}\n            </div>\n        </div>\n    )\n}","import React from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {icons} from \"./Timeline\"\n\nexport function Overview({teams, throws, timeline, ...props}) {\n    return (\n        <div className={\"px-2 py-2 space-y-4\"}>\n            {teams.map(team => {\n                return <TeamTable\n                    key={team.id}\n                    team={team}\n                    timeline={timeline}\n                    throws={throws}\n                />\n            })}\n        </div>\n    )\n}\n\nfunction TeamTable({team, timeline, throws, ...props}) {\n    return (\n        <div className={\"flex border rounded border-gray-100 dark:border-gray-400 bg-white dark:bg-gray-800 shadow-md\"}>\n            <HeaderColumn team={team} throws={throws}/>\n            <TimelineColumn team={team} timeline={timeline}/>\n        </div>\n    )\n}\n\nfunction HeaderColumn({team, throws, ...props}) {\n    return (\n        <div className={\"w-1/3 divide-y divide-gray-300 dark:divide-gray-500\"}>\n            {team.players.map(player => {\n                return <div\n                    className={`text-${team.color}-600 dark:text-${team.color}-500 pl-2 pt-1 h-8 font-bold truncate `}\n                    key={player.id}\n                >\n                    {player.name || \"...\"} ({throws[player.id]})\n                </div>\n            })}\n        </div>\n    )\n}\n\nfunction TimelineColumn({team, timeline, ...props}) {\n    return (\n        <div className={\"w-2/3 border-l dark:border-gray-400 divide-y divide-gray-300 dark:divide-gray-500 overflow-y-scroll \"}>\n            {team.players.map(player => {\n                return <Row\n                    key={player.id}\n                    timeline={timeline}\n                    player={player}\n                    color={team.color}\n                />\n            })}\n        </div>\n    )\n}\n\nfunction Row({player, timeline, color}) {\n    console.log(timeline\n        .filter(entry => entry.playerId === player.id))\n\n    const iconList = timeline\n        .filter(entry => entry.playerId === player.id)\n        .map((entry, i) => {\n            return <FontAwesomeIcon\n                icon={icons[entry.action]}\n                className={\"mr-1 fa-w-16\"} // we have to use fa-w-16 instead of w-16 to set the width successfully\n                key={i}\n            />\n        })\n\n    return (\n        <div className={`text-${color}-600 dark:text-${color}-500 font-bold flex flex-row pt-2 px-2 h-8`}>\n            {iconList}\n        </div>\n    )\n}","import React, {useEffect, useState} from 'react';\nimport {Timeline} from \"./Timeline\";\nimport {Header} from \"./Header\";\nimport {Footer, navOptions} from \"./Footer\";\nimport {countActions, countThrows, initialGameState, saveToLocalstorage} from \"./gameLogic\";\nimport {TeamSetup} from \"./Teams\";\nimport {Overview} from \"./Overview\";\nimport {setFromLocalStorage} from \"./util\";\n\n\nconst _initialGameState = initialGameState()\n\nfunction App() {\n    // persistent (between reloads) game state\n    const [teams, setTeams] = useState(_initialGameState.teams)\n    const [timeline, setTimeline] = useState(_initialGameState.timeline)\n    const [navIndex, setNavIndex] = useState(navOptions.teams)\n\n    // ephemeral game state\n    const [throws, setThrows] = useState({})\n    const [actionCount, setActionCount] = useState({})\n\n    function reset() {\n        const state = initialGameState()\n        setTeams(state.teams)\n        setTimeline(state.timeline)\n        saveToLocalstorage(state)\n    }\n\n    // on first load\n    useEffect(() => {\n        setFromLocalStorage(\"timeline\", setTimeline)\n        setFromLocalStorage(\"teams\", setTeams)\n        setFromLocalStorage(\"navIndex\", setNavIndex)\n        // write initial team data on the very first load\n        if (localStorage.getItem(\"teams\") == null) {\n            saveToLocalstorage({teams: _initialGameState.teams})\n        }\n    }, [])\n\n    // when changing the tab\n    useEffect(() => {\n        localStorage.setItem(\"navIndex\", JSON.stringify(navIndex))\n\n        try {\n            navIndex === navOptions.timeline && document.getElementById(\"defaultScroll\").scrollIntoView()\n            navIndex === navOptions.teams && window.scrollTo({\n                top: 0,\n                behavior: 'auto'\n            })\n        } catch (e) {}\n\n    }, [navIndex])\n\n    // on every player action\n    useEffect(() => {\n        setThrows(countThrows(timeline))\n        setActionCount(countActions(timeline))\n    }, [timeline])\n\n    return (\n        <div>\n            <Header teams={teams} throws={throws}/>\n\n            {navIndex === navOptions.timeline && <Timeline\n                //className={navIndex === navOptions.timeline ? \"\" : \"hidden\"}\n                teams={teams}\n                throws={throws}\n                actionCount={actionCount}\n                timeline={timeline}\n                setTimeline={setTimeline}\n            />}\n\n            {navIndex === navOptions.teams && <TeamSetup\n                teams={teams}\n                actionCount={actionCount}\n                setTeams={setTeams}\n                reset={reset}\n            />}\n\n            {navIndex === navOptions.overview && <Overview\n                teams={teams}\n                timeline={timeline}\n                throws={throws}\n            />}\n\n            <Footer navIndex={navIndex} setNavIndex={setNavIndex}/>\n        </div>\n    )\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}